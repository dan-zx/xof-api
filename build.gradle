buildscript {
    ext {
        kotlinVersion = '1.3.61'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'kotlin-spring'

    group 'com.github.danzx.xof'
    version '1.0-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    ext {
        jacksonVersion = '2.9.10'
        javaxInjectVersion = '1'
        hibernateVersion = '5.3.13.Final'
        hibernateValidatorVersion = '6.0.18.Final'
        kotlinTestVersion = '3.4.2'
        kxdateVersion = '1.0.0'
        logbackVersion = '1.2.3'
        mockkVersion = '1.9.3'
        springBootVersion = '2.1.10.RELEASE'
        springDataJpaVersion = '2.1.12.RELEASE'
        springFrameworkVersion = '5.1.11.RELEASE'
        springfoxSwaggerVersion = '2.9.2'
    }

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        testImplementation "ch.qos.logback:logback-classic:$logbackVersion"
        testImplementation "com.github.yongjhih.kxdate:kxdate:$kxdateVersion"
        testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlinTestVersion"
        testImplementation "io.mockk:mockk:$mockkVersion"
    }

    compileKotlin {
        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict', "-Xinline-classes"]
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    }

    compileTestKotlin {
        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    }

    test {
        useJUnitPlatform()
    }
}

wrapper {
    gradleVersion = '5.6.2'
}
